// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | AND
  | OR
  | NOT
  | COLON
  | SEMICOLON2
  | COMMA
  | SEQUENCE
  | TO_FLOAT
  | TO_INT
  | PLUS_F
  | MINUS_F
  | STAR_F
  | SLASH_F
  | PERCENT_F
  | BRASQ
  | KETSQ
  | CHAIN
  | ISEMPTY
  | MATCH
  | WITH
  | VSEP
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_SEQUENCE
    | TOKEN_TO_FLOAT
    | TOKEN_TO_INT
    | TOKEN_PLUS_F
    | TOKEN_MINUS_F
    | TOKEN_STAR_F
    | TOKEN_SLASH_F
    | TOKEN_PERCENT_F
    | TOKEN_BRASQ
    | TOKEN_KETSQ
    | TOKEN_CHAIN
    | TOKEN_ISEMPTY
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_VSEP
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_expr
    | NONTERM_binding
    | NONTERM_parms
    | NONTERM_expr_app_atom
    | NONTERM_expr_tuple_atom
    | NONTERM_ty
    | NONTERM_ty_tuple
    | NONTERM_expr_tuple_atoms
    | NONTERM_tuple_decompose_ids

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | LT  -> 18 
  | GT  -> 19 
  | LEQ  -> 20 
  | GEQ  -> 21 
  | EQ  -> 22 
  | NEQ  -> 23 
  | AND  -> 24 
  | OR  -> 25 
  | NOT  -> 26 
  | COLON  -> 27 
  | SEMICOLON2  -> 28 
  | COMMA  -> 29 
  | SEQUENCE  -> 30 
  | TO_FLOAT  -> 31 
  | TO_INT  -> 32 
  | PLUS_F  -> 33 
  | MINUS_F  -> 34 
  | STAR_F  -> 35 
  | SLASH_F  -> 36 
  | PERCENT_F  -> 37 
  | BRASQ  -> 38 
  | KETSQ  -> 39 
  | CHAIN  -> 40 
  | ISEMPTY  -> 41 
  | MATCH  -> 42 
  | WITH  -> 43 
  | VSEP  -> 44 
  | STRING _ -> 45 
  | ID _ -> 46 
  | CHAR _ -> 47 
  | FLOAT _ -> 48 
  | INT _ -> 49 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LEQ 
  | 21 -> TOKEN_GEQ 
  | 22 -> TOKEN_EQ 
  | 23 -> TOKEN_NEQ 
  | 24 -> TOKEN_AND 
  | 25 -> TOKEN_OR 
  | 26 -> TOKEN_NOT 
  | 27 -> TOKEN_COLON 
  | 28 -> TOKEN_SEMICOLON2 
  | 29 -> TOKEN_COMMA 
  | 30 -> TOKEN_SEQUENCE 
  | 31 -> TOKEN_TO_FLOAT 
  | 32 -> TOKEN_TO_INT 
  | 33 -> TOKEN_PLUS_F 
  | 34 -> TOKEN_MINUS_F 
  | 35 -> TOKEN_STAR_F 
  | 36 -> TOKEN_SLASH_F 
  | 37 -> TOKEN_PERCENT_F 
  | 38 -> TOKEN_BRASQ 
  | 39 -> TOKEN_KETSQ 
  | 40 -> TOKEN_CHAIN 
  | 41 -> TOKEN_ISEMPTY 
  | 42 -> TOKEN_MATCH 
  | 43 -> TOKEN_WITH 
  | 44 -> TOKEN_VSEP 
  | 45 -> TOKEN_STRING 
  | 46 -> TOKEN_ID 
  | 47 -> TOKEN_CHAR 
  | 48 -> TOKEN_FLOAT 
  | 49 -> TOKEN_INT 
  | 52 -> TOKEN_end_of_input
  | 50 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_binding 
    | 14 -> NONTERM_binding 
    | 15 -> NONTERM_parms 
    | 16 -> NONTERM_parms 
    | 17 -> NONTERM_parms 
    | 18 -> NONTERM_parms 
    | 19 -> NONTERM_expr_app_atom 
    | 20 -> NONTERM_expr_app_atom 
    | 21 -> NONTERM_expr_app_atom 
    | 22 -> NONTERM_expr_app_atom 
    | 23 -> NONTERM_expr_app_atom 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr_app_atom 
    | 28 -> NONTERM_expr_app_atom 
    | 29 -> NONTERM_expr_app_atom 
    | 30 -> NONTERM_expr_app_atom 
    | 31 -> NONTERM_expr_app_atom 
    | 32 -> NONTERM_expr_tuple_atom 
    | 33 -> NONTERM_expr_tuple_atom 
    | 34 -> NONTERM_expr_tuple_atom 
    | 35 -> NONTERM_expr_tuple_atom 
    | 36 -> NONTERM_expr_tuple_atom 
    | 37 -> NONTERM_expr_tuple_atom 
    | 38 -> NONTERM_expr_tuple_atom 
    | 39 -> NONTERM_expr_tuple_atom 
    | 40 -> NONTERM_expr_tuple_atom 
    | 41 -> NONTERM_expr_tuple_atom 
    | 42 -> NONTERM_expr_tuple_atom 
    | 43 -> NONTERM_expr_tuple_atom 
    | 44 -> NONTERM_expr_tuple_atom 
    | 45 -> NONTERM_expr_tuple_atom 
    | 46 -> NONTERM_expr_tuple_atom 
    | 47 -> NONTERM_expr_tuple_atom 
    | 48 -> NONTERM_expr_tuple_atom 
    | 49 -> NONTERM_expr_tuple_atom 
    | 50 -> NONTERM_expr_tuple_atom 
    | 51 -> NONTERM_expr_tuple_atom 
    | 52 -> NONTERM_expr_tuple_atom 
    | 53 -> NONTERM_expr_tuple_atom 
    | 54 -> NONTERM_expr_tuple_atom 
    | 55 -> NONTERM_expr_tuple_atom 
    | 56 -> NONTERM_expr_tuple_atom 
    | 57 -> NONTERM_expr_tuple_atom 
    | 58 -> NONTERM_expr_tuple_atom 
    | 59 -> NONTERM_expr_tuple_atom 
    | 60 -> NONTERM_expr_tuple_atom 
    | 61 -> NONTERM_expr_tuple_atom 
    | 62 -> NONTERM_expr_tuple_atom 
    | 63 -> NONTERM_expr_tuple_atom 
    | 64 -> NONTERM_expr_tuple_atom 
    | 65 -> NONTERM_ty 
    | 66 -> NONTERM_ty 
    | 67 -> NONTERM_ty 
    | 68 -> NONTERM_ty 
    | 69 -> NONTERM_ty_tuple 
    | 70 -> NONTERM_ty_tuple 
    | 71 -> NONTERM_expr_tuple_atoms 
    | 72 -> NONTERM_expr_tuple_atoms 
    | 73 -> NONTERM_tuple_decompose_ids 
    | 74 -> NONTERM_tuple_decompose_ids 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 52 
let _fsyacc_tagOfErrorTerminal = 50

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | SEQUENCE  -> "SEQUENCE" 
  | TO_FLOAT  -> "TO_FLOAT" 
  | TO_INT  -> "TO_INT" 
  | PLUS_F  -> "PLUS_F" 
  | MINUS_F  -> "MINUS_F" 
  | STAR_F  -> "STAR_F" 
  | SLASH_F  -> "SLASH_F" 
  | PERCENT_F  -> "PERCENT_F" 
  | BRASQ  -> "BRASQ" 
  | KETSQ  -> "KETSQ" 
  | CHAIN  -> "CHAIN" 
  | ISEMPTY  -> "ISEMPTY" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | VSEP  -> "VSEP" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEQUENCE  -> (null : System.Object) 
  | TO_FLOAT  -> (null : System.Object) 
  | TO_INT  -> (null : System.Object) 
  | PLUS_F  -> (null : System.Object) 
  | MINUS_F  -> (null : System.Object) 
  | STAR_F  -> (null : System.Object) 
  | SLASH_F  -> (null : System.Object) 
  | PERCENT_F  -> (null : System.Object) 
  | BRASQ  -> (null : System.Object) 
  | KETSQ  -> (null : System.Object) 
  | CHAIN  -> (null : System.Object) 
  | ISEMPTY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | VSEP  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 1us; 65535us; 2us; 3us; 1us; 65535us; 0us; 1us; 24us; 65535us; 0us; 6us; 2us; 4us; 12us; 63us; 18us; 19us; 21us; 22us; 25us; 26us; 29us; 30us; 33us; 34us; 36us; 37us; 40us; 41us; 44us; 45us; 60us; 63us; 66us; 67us; 70us; 71us; 106us; 107us; 113us; 114us; 116us; 117us; 123us; 124us; 125us; 126us; 148us; 149us; 150us; 151us; 152us; 153us; 163us; 164us; 168us; 169us; 50us; 65535us; 0us; 8us; 2us; 115us; 12us; 115us; 13us; 115us; 18us; 115us; 21us; 115us; 25us; 115us; 29us; 115us; 33us; 115us; 36us; 115us; 40us; 115us; 44us; 115us; 60us; 115us; 66us; 115us; 70us; 115us; 106us; 115us; 113us; 115us; 116us; 115us; 123us; 115us; 125us; 115us; 127us; 115us; 128us; 115us; 129us; 115us; 130us; 115us; 131us; 115us; 132us; 115us; 133us; 115us; 134us; 115us; 135us; 115us; 136us; 115us; 137us; 115us; 138us; 115us; 139us; 115us; 140us; 115us; 141us; 115us; 142us; 115us; 143us; 115us; 144us; 115us; 145us; 115us; 146us; 115us; 147us; 115us; 148us; 115us; 150us; 115us; 152us; 115us; 154us; 115us; 157us; 115us; 158us; 115us; 163us; 115us; 168us; 115us; 180us; 115us; 4us; 65535us; 17us; 20us; 32us; 35us; 46us; 52us; 51us; 53us; 78us; 65535us; 0us; 77us; 2us; 77us; 10us; 103us; 11us; 103us; 12us; 77us; 13us; 77us; 18us; 77us; 21us; 77us; 25us; 77us; 29us; 77us; 33us; 77us; 36us; 77us; 40us; 77us; 44us; 77us; 60us; 77us; 66us; 77us; 70us; 77us; 78us; 103us; 79us; 103us; 80us; 103us; 81us; 103us; 82us; 103us; 83us; 103us; 84us; 103us; 85us; 103us; 86us; 103us; 87us; 103us; 88us; 103us; 89us; 103us; 90us; 103us; 91us; 103us; 92us; 103us; 93us; 103us; 94us; 103us; 95us; 103us; 96us; 103us; 97us; 103us; 98us; 103us; 99us; 103us; 100us; 103us; 101us; 103us; 102us; 103us; 106us; 77us; 113us; 77us; 116us; 77us; 123us; 77us; 125us; 77us; 127us; 77us; 128us; 77us; 129us; 77us; 130us; 77us; 131us; 77us; 132us; 77us; 133us; 77us; 134us; 77us; 135us; 77us; 136us; 77us; 137us; 77us; 138us; 77us; 139us; 77us; 140us; 77us; 141us; 77us; 142us; 77us; 143us; 77us; 144us; 77us; 145us; 77us; 146us; 77us; 147us; 77us; 148us; 77us; 150us; 77us; 152us; 77us; 154us; 77us; 155us; 156us; 157us; 77us; 158us; 77us; 163us; 77us; 168us; 77us; 180us; 77us; 50us; 65535us; 0us; 11us; 2us; 11us; 12us; 10us; 13us; 102us; 18us; 11us; 21us; 11us; 25us; 11us; 29us; 11us; 33us; 11us; 36us; 11us; 40us; 11us; 44us; 11us; 60us; 11us; 66us; 11us; 70us; 11us; 106us; 11us; 113us; 11us; 116us; 11us; 123us; 11us; 125us; 11us; 127us; 78us; 128us; 79us; 129us; 80us; 130us; 81us; 131us; 82us; 132us; 83us; 133us; 84us; 134us; 85us; 135us; 86us; 136us; 87us; 137us; 88us; 138us; 89us; 139us; 90us; 140us; 91us; 141us; 92us; 142us; 93us; 143us; 94us; 144us; 95us; 145us; 96us; 146us; 97us; 147us; 98us; 148us; 11us; 150us; 11us; 152us; 11us; 154us; 99us; 157us; 100us; 158us; 101us; 163us; 11us; 168us; 11us; 180us; 102us; 10us; 65535us; 23us; 24us; 27us; 28us; 38us; 39us; 42us; 43us; 49us; 50us; 73us; 74us; 110us; 111us; 174us; 171us; 177us; 172us; 179us; 173us; 10us; 65535us; 23us; 175us; 27us; 175us; 38us; 175us; 42us; 175us; 49us; 175us; 73us; 175us; 110us; 175us; 174us; 175us; 177us; 175us; 179us; 176us; 2us; 65535us; 13us; 14us; 180us; 181us; 2us; 65535us; 120us; 121us; 183us; 184us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 4us; 6us; 31us; 82us; 87us; 166us; 217us; 228us; 239us; 242us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 4us; 36us; 1us; 4us; 23us; 5us; 6us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 5us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 3us; 6us; 25us; 27us; 1us; 6us; 1us; 6us; 1us; 6us; 9us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 37us; 4us; 7us; 8us; 9us; 10us; 1us; 7us; 1us; 7us; 2us; 8us; 10us; 1us; 8us; 1us; 8us; 1us; 9us; 4us; 9us; 66us; 69us; 70us; 1us; 9us; 1us; 9us; 1us; 10us; 4us; 10us; 66us; 69us; 70us; 1us; 10us; 1us; 10us; 4us; 11us; 12us; 13us; 14us; 4us; 11us; 12us; 13us; 14us; 1us; 11us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 12us; 1us; 13us; 4us; 13us; 66us; 69us; 70us; 1us; 13us; 1us; 13us; 1us; 14us; 4us; 14us; 66us; 69us; 70us; 1us; 14us; 1us; 14us; 2us; 15us; 17us; 2us; 16us; 18us; 2us; 16us; 18us; 2us; 16us; 18us; 5us; 16us; 18us; 66us; 69us; 70us; 2us; 16us; 18us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 2us; 25us; 27us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 29us; 2us; 30us; 31us; 4us; 30us; 66us; 69us; 70us; 1us; 30us; 1us; 31us; 1us; 32us; 22us; 33us; 38us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 39us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 40us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 61us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 63us; 22us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 64us; 23us; 33us; 41us; 42us; 43us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 61us; 63us; 71us; 72us; 1us; 33us; 2us; 34us; 35us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 4us; 35us; 66us; 69us; 70us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 2us; 59us; 60us; 2us; 59us; 60us; 2us; 59us; 60us; 2us; 59us; 60us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 4us; 66us; 66us; 69us; 70us; 4us; 66us; 68us; 69us; 70us; 3us; 66us; 69us; 70us; 1us; 66us; 1us; 67us; 2us; 67us; 70us; 1us; 68us; 1us; 68us; 1us; 70us; 1us; 72us; 1us; 72us; 2us; 73us; 74us; 1us; 74us; 1us; 74us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 19us; 21us; 45us; 68us; 72us; 74us; 76us; 78us; 88us; 93us; 95us; 97us; 100us; 102us; 104us; 106us; 111us; 113us; 115us; 117us; 122us; 124us; 126us; 131us; 136us; 138us; 140us; 143us; 145us; 147us; 149us; 154us; 156us; 158us; 160us; 165us; 167us; 169us; 172us; 175us; 178us; 181us; 187us; 190us; 192us; 194us; 196us; 198us; 200us; 202us; 204us; 206us; 209us; 211us; 213us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 233us; 236us; 241us; 243us; 245us; 247us; 270us; 293us; 316us; 339us; 362us; 385us; 408us; 431us; 454us; 477us; 500us; 523us; 546us; 569us; 592us; 615us; 638us; 661us; 684us; 707us; 730us; 753us; 776us; 799us; 823us; 825us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 920us; 923us; 926us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 965us; 967us; 972us; 977us; 981us; 983us; 985us; 988us; 990us; 992us; 994us; 996us; 998us; 1001us; 1003us; |]
let _fsyacc_action_rows = 185
let _fsyacc_actionTableElements = [|19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 49152us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 49152us; 1us; 32768us; 0us; 5us; 0us; 16386us; 1us; 32768us; 28us; 7us; 0us; 16387us; 2us; 32768us; 8us; 116us; 28us; 9us; 0us; 16388us; 32us; 16389us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 29us; 13us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 31us; 16389us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 20us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 12us; 61us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 12us; 15us; 0us; 16390us; 3us; 32768us; 7us; 31us; 11us; 118us; 46us; 17us; 4us; 32768us; 11us; 47us; 22us; 18us; 27us; 23us; 46us; 46us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16391us; 2us; 32768us; 22us; 21us; 27us; 27us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16392us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 15us; 179us; 22us; 25us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16393us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 15us; 179us; 22us; 29us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16394us; 1us; 32768us; 46us; 32us; 4us; 32768us; 11us; 47us; 22us; 33us; 27us; 42us; 46us; 46us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16395us; 2us; 32768us; 22us; 36us; 27us; 38us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16396us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 15us; 179us; 22us; 40us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16397us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 15us; 179us; 22us; 44us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16398us; 2us; 16399us; 11us; 47us; 46us; 46us; 1us; 32768us; 46us; 48us; 1us; 32768us; 27us; 49us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 12us; 51us; 15us; 179us; 2us; 16400us; 11us; 47us; 46us; 46us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 20us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 12us; 61us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16409us; 0us; 16410us; 1us; 32768us; 12us; 64us; 0us; 16411us; 1us; 32768us; 11us; 66us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 12us; 68us; 0us; 16412us; 1us; 32768us; 11us; 70us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 12us; 72us; 0us; 16413us; 3us; 32768us; 11us; 177us; 39us; 76us; 46us; 170us; 3us; 16453us; 5us; 174us; 15us; 179us; 39us; 75us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 14us; 16422us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16423us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16424us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 21us; 16425us; 9us; 58us; 10us; 59us; 11us; 60us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16426us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 21us; 16427us; 9us; 58us; 10us; 59us; 11us; 60us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16428us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 16429us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16430us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 16431us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 14us; 16432us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 31us; 16433us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 31us; 16434us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16435us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16436us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16437us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16438us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16439us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 23us; 16440us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 29us; 16441us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 30us; 16442us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 18us; 16445us; 9us; 58us; 10us; 59us; 11us; 60us; 17us; 138us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 31us; 16447us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 32us; 32768us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 43us; 159us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 32us; 16455us; 9us; 58us; 10us; 59us; 11us; 60us; 13us; 130us; 14us; 132us; 15us; 134us; 16us; 136us; 17us; 138us; 18us; 142us; 19us; 143us; 20us; 144us; 21us; 145us; 22us; 140us; 23us; 141us; 24us; 146us; 25us; 147us; 29us; 180us; 30us; 154us; 31us; 65us; 32us; 69us; 33us; 131us; 34us; 133us; 35us; 135us; 36us; 137us; 37us; 139us; 38us; 73us; 40us; 157us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16417us; 2us; 32768us; 11us; 108us; 46us; 105us; 1us; 32768us; 5us; 106us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16418us; 1us; 32768us; 46us; 109us; 1us; 32768us; 27us; 110us; 2us; 32768us; 11us; 177us; 46us; 170us; 3us; 16453us; 5us; 174us; 12us; 112us; 15us; 179us; 1us; 32768us; 5us; 113us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16419us; 1us; 32768us; 8us; 116us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16420us; 1us; 32768us; 46us; 119us; 1us; 32768us; 29us; 120us; 1us; 32768us; 46us; 182us; 1us; 32768us; 12us; 122us; 1us; 32768us; 22us; 123us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 8us; 125us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16421us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 2us; 150us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 16443us; 3us; 152us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16444us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 11us; 32768us; 9us; 58us; 10us; 59us; 11us; 60us; 31us; 65us; 32us; 69us; 38us; 73us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16446us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 46us; 160us; 1us; 32768us; 40us; 161us; 1us; 32768us; 46us; 162us; 1us; 32768us; 5us; 163us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 1us; 32768us; 44us; 165us; 1us; 32768us; 38us; 166us; 1us; 32768us; 39us; 167us; 1us; 32768us; 5us; 168us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 12us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16448us; 0us; 16449us; 2us; 16450us; 5us; 174us; 15us; 179us; 3us; 16453us; 5us; 174us; 12us; 178us; 15us; 179us; 2us; 16453us; 5us; 174us; 15us; 179us; 2us; 32768us; 11us; 177us; 46us; 170us; 0us; 16451us; 0us; 16451us; 2us; 32768us; 11us; 177us; 46us; 170us; 0us; 16452us; 2us; 32768us; 11us; 177us; 46us; 170us; 19us; 32768us; 1us; 148us; 4us; 104us; 6us; 16us; 9us; 58us; 10us; 59us; 11us; 60us; 14us; 128us; 26us; 127us; 31us; 65us; 32us; 69us; 34us; 129us; 38us; 73us; 41us; 155us; 42us; 158us; 45us; 56us; 46us; 62us; 47us; 57us; 48us; 55us; 49us; 54us; 0us; 16456us; 1us; 16457us; 29us; 183us; 1us; 32768us; 46us; 182us; 0us; 16458us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 20us; 21us; 41us; 42us; 44us; 45us; 47us; 48us; 51us; 52us; 85us; 117us; 138us; 158us; 160us; 161us; 165us; 170us; 190us; 191us; 194us; 214us; 215us; 218us; 222us; 242us; 243us; 246us; 250us; 270us; 271us; 273us; 278us; 298us; 299us; 302us; 322us; 323us; 326us; 330us; 350us; 351us; 354us; 358us; 378us; 379us; 382us; 384us; 386us; 389us; 393us; 396us; 397us; 398us; 399us; 400us; 401us; 402us; 403us; 404us; 425us; 426us; 427us; 429us; 430us; 432us; 452us; 454us; 455us; 457us; 477us; 479us; 480us; 484us; 488us; 489us; 490us; 491us; 506us; 521us; 536us; 558us; 573us; 595us; 610us; 630us; 645us; 665us; 680us; 712us; 744us; 768us; 792us; 816us; 840us; 864us; 888us; 918us; 949us; 968us; 1000us; 1033us; 1066us; 1067us; 1070us; 1072us; 1092us; 1093us; 1095us; 1097us; 1100us; 1104us; 1106us; 1126us; 1127us; 1129us; 1149us; 1150us; 1152us; 1154us; 1156us; 1158us; 1160us; 1180us; 1182us; 1202us; 1203us; 1223us; 1243us; 1263us; 1283us; 1303us; 1323us; 1343us; 1363us; 1383us; 1403us; 1423us; 1443us; 1463us; 1483us; 1503us; 1523us; 1543us; 1563us; 1583us; 1603us; 1623us; 1643us; 1645us; 1665us; 1667us; 1687us; 1688us; 1708us; 1720us; 1721us; 1741us; 1761us; 1763us; 1765us; 1767us; 1769us; 1789us; 1791us; 1793us; 1795us; 1797us; 1817us; 1818us; 1819us; 1822us; 1826us; 1829us; 1832us; 1833us; 1834us; 1837us; 1838us; 1841us; 1861us; 1862us; 1864us; 1866us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 2us; 2us; 1us; 5us; 4us; 5us; 6us; 7us; 5us; 6us; 8us; 7us; 1us; 5us; 2us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 4us; 4us; 3us; 2us; 1us; 2us; 4us; 8us; 3us; 10us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 6us; 3us; 2us; 3us; 13us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 9us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 16386us; 65535us; 16387us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 16394us; 65535us; 65535us; 65535us; 16395us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 16406us; 16407us; 16408us; 65535us; 16409us; 16410us; 65535us; 16411us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 16414us; 16415us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16448us; 16449us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; |]
let _fsyacc_reductions ()  =    [| 
# 451 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  TinyML.Ast.interactive )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteractive));
# 460 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  TinyML.Ast.expr )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startprogram));
# 469 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                                              _1 
                   )
# 52 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 480 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                               IExpr _1 
                   )
# 55 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 491 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'binding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                               IBinding _1 
                   )
# 56 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 502 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                                               _1 
                   )
# 59 "Parser.fsy"
                 : 'expr));
# 513 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atoms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                                               Tuple (_2::_4) 
                   )
# 60 "Parser.fsy"
                 : 'expr));
# 525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                                                (false, _2, None, _4) 
                   )
# 64 "Parser.fsy"
                 : 'binding));
# 537 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                                (false, _2, None, fold_params _3 _5) 
                   )
# 65 "Parser.fsy"
                 : 'binding));
# 550 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                                                (false, _2, Some _4, _6) 
                   )
# 67 "Parser.fsy"
                 : 'binding));
# 563 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                                                (false, _2, Some _5, fold_params _3 _7) 
                   )
# 68 "Parser.fsy"
                 : 'binding));
# 577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                                (true, _3, None, _5) 
                   )
# 70 "Parser.fsy"
                 : 'binding));
# 589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                                (true, _3, None, fold_params _4 _6 )
                   )
# 71 "Parser.fsy"
                 : 'binding));
# 602 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                                                (true, _3, Some _6, fold_params _4 _8) 
                   )
# 73 "Parser.fsy"
                 : 'binding));
# 616 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                                (true, _3, Some _5, _7) 
                   )
# 74 "Parser.fsy"
                 : 'binding));
# 629 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                         [_1, None] 
                   )
# 77 "Parser.fsy"
                 : 'parms));
# 640 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                         [_2, Some _4]
                   )
# 78 "Parser.fsy"
                 : 'parms));
# 652 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                         (_1, None) :: _2 
                   )
# 79 "Parser.fsy"
                 : 'parms));
# 664 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'parms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                         (_2, Some _4) :: _6
                   )
# 80 "Parser.fsy"
                 : 'parms));
# 677 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                               Lit (LInt _1) 
                   )
# 83 "Parser.fsy"
                 : 'expr_app_atom));
# 688 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                               Lit (LFloat _1) 
                   )
# 84 "Parser.fsy"
                 : 'expr_app_atom));
# 699 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                               Lit (LString _1) 
                   )
# 85 "Parser.fsy"
                 : 'expr_app_atom));
# 710 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               Lit (LChar _1) 
                   )
# 86 "Parser.fsy"
                 : 'expr_app_atom));
# 721 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                               Lit (LBool true) 
                   )
# 87 "Parser.fsy"
                 : 'expr_app_atom));
# 731 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                               Lit (LBool false) 
                   )
# 88 "Parser.fsy"
                 : 'expr_app_atom));
# 741 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                               Lit LUnit 
                   )
# 89 "Parser.fsy"
                 : 'expr_app_atom));
# 751 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                               Var _1 
                   )
# 91 "Parser.fsy"
                 : 'expr_app_atom));
# 762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                               _2 
                   )
# 93 "Parser.fsy"
                 : 'expr_app_atom));
# 773 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                               UnOp ("to_float", _3) 
                   )
# 95 "Parser.fsy"
                 : 'expr_app_atom));
# 784 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                               UnOp ("to_int", _3) 
                   )
# 96 "Parser.fsy"
                 : 'expr_app_atom));
# 795 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                               Empty (Some _2) 
                   )
# 98 "Parser.fsy"
                 : 'expr_app_atom));
# 806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                               Empty (None) 
                   )
# 99 "Parser.fsy"
                 : 'expr_app_atom));
# 816 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_app_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                                               _1 
                   )
# 102 "Parser.fsy"
                 : 'expr_tuple_atom));
# 827 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_app_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                                               App (_1, _2) 
                   )
# 103 "Parser.fsy"
                 : 'expr_tuple_atom));
# 839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                                               Lambda (_2, None, _4) 
                   )
# 106 "Parser.fsy"
                 : 'expr_tuple_atom));
# 851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                               Lambda (_3, Some _5, _8) 
                   )
# 107 "Parser.fsy"
                 : 'expr_tuple_atom));
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'binding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                                                       LetIn (_1, _3) 
                   )
# 109 "Parser.fsy"
                 : 'expr_tuple_atom));
# 876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuple_decompose_ids)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                                                       LetTuple (_3::_5, _8, _10)
                   )
# 110 "Parser.fsy"
                 : 'expr_tuple_atom));
# 890 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                                               UnOp ("not", _2) 
                   )
# 112 "Parser.fsy"
                 : 'expr_tuple_atom));
# 901 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                                               UnOp ("-", _2) 
                   )
# 113 "Parser.fsy"
                 : 'expr_tuple_atom));
# 912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                                               UnOp ("-.", _2) 
                   )
# 114 "Parser.fsy"
                 : 'expr_tuple_atom));
# 923 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                                               BinOp (_1, "+", _3) 
                   )
# 119 "Parser.fsy"
                 : 'expr_tuple_atom));
# 935 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                                               BinOp (_1, "+.", _3) 
                   )
# 120 "Parser.fsy"
                 : 'expr_tuple_atom));
# 947 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                                               BinOp (_1, "-", _3) 
                   )
# 121 "Parser.fsy"
                 : 'expr_tuple_atom));
# 959 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                                               BinOp (_1, "-.", _3) 
                   )
# 122 "Parser.fsy"
                 : 'expr_tuple_atom));
# 971 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Parser.fsy"
                                                                               BinOp (_1, "*", _3) 
                   )
# 123 "Parser.fsy"
                 : 'expr_tuple_atom));
# 983 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                                                               BinOp (_1, "*.", _3) 
                   )
# 124 "Parser.fsy"
                 : 'expr_tuple_atom));
# 995 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                                               BinOp (_1, "/", _3) 
                   )
# 125 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1007 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                                               BinOp (_1, "/.", _3) 
                   )
# 126 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1019 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                                                               BinOp (_1, "%", _3) 
                   )
# 127 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                                               BinOp (_1, "%.", _3) 
                   )
# 128 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1043 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                                                               BinOp (_1, "=", _3) 
                   )
# 130 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1055 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                                                               BinOp (_1, "<>", _3) 
                   )
# 131 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                                                               BinOp (_1, "<", _3) 
                   )
# 132 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1079 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Parser.fsy"
                                                                               BinOp (_1, ">", _3) 
                   )
# 133 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1091 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                                                               BinOp (_1, "<=", _3) 
                   )
# 134 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1103 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Parser.fsy"
                                                                               BinOp (_1, ">=", _3) 
                   )
# 135 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1115 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "Parser.fsy"
                                                                               BinOp (_1, "and", _3) 
                   )
# 136 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                                                                               BinOp (_1, "or", _3) 
                   )
# 137 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "Parser.fsy"
                                                                               IfThenElse (_2, _4, None) 
                   )
# 139 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Parser.fsy"
                                                                               IfThenElse (_2, _4, Some _6) 
                   )
# 140 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1164 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Parser.fsy"
                                                                               Seq (_1, _3) 
                   )
# 142 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1176 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_app_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "Parser.fsy"
                                                                               IsEmpty (_2) 
                   )
# 147 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1187 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "Parser.fsy"
                                                                               List (_1, _3) 
                   )
# 148 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1199 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _13 = (let data = parseState.GetInput(13) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Parser.fsy"
                                                                                                               Match (_2, _4, _6, _8, _13) 
                   )
# 150 "Parser.fsy"
                 : 'expr_tuple_atom));
# 1214 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "Parser.fsy"
                                                               TyName _1 
                   )
# 154 "Parser.fsy"
                 : 'ty));
# 1225 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 155 "Parser.fsy"
                 : 'ty));
# 1237 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_tuple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Parser.fsy"
                                                               TyTuple _1 
                   )
# 156 "Parser.fsy"
                 : 'ty));
# 1248 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Parser.fsy"
                                                               _2 
                   )
# 157 "Parser.fsy"
                 : 'ty));
# 1259 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Parser.fsy"
                                                               [_1] 
                   )
# 160 "Parser.fsy"
                 : 'ty_tuple));
# 1270 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_tuple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 161 "Parser.fsy"
                 : 'ty_tuple));
# 1282 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Parser.fsy"
                                                                       [_1] 
                   )
# 164 "Parser.fsy"
                 : 'expr_tuple_atoms));
# 1293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atom)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr_tuple_atoms)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Parser.fsy"
                                                                       _1 :: _3 
                   )
# 165 "Parser.fsy"
                 : 'expr_tuple_atoms));
# 1305 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "Parser.fsy"
                                                               [_1] 
                   )
# 168 "Parser.fsy"
                 : 'tuple_decompose_ids));
# 1316 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuple_decompose_ids)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 169 "Parser.fsy"
                 : 'tuple_decompose_ids));
|]
# 1329 "Parser.fs"
let tables () : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 53;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let program lexer lexbuf :  TinyML.Ast.expr  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
